<?xml version="1.0" encoding="UTF-8"?>
<project name="dANN" default="all" basedir=".">
	<property name="debug.level" value="vars,lines,source" /> <!-- Attempt to remove Cobertura warnings -->

	<taskdef name="lint4j" classname="com.jutils.lint4j.ant.Lint4jAntTask">
		<classpath>
			<pathelement location="lib/lint/lint4j.jar"/>
		</classpath>
	</taskdef>
	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
		<classpath>
			<pathelement location="lib/findbugs/findbugs-ant.jar"/>
			<pathelement location="lib/findbugs/bcel.jar"/>
			<pathelement location="lib/findbugs/dom4j-1.6.1.jar"/>
			<pathelement location="lib/findbugs/jFormatString.jar"/>
			<pathelement location="lib/findbugs/asm-3.1.jar"/>
			<pathelement location="lib/findbugs/asm-commons-3.1.jar"/>
			<pathelement location="lib/findbugs/asm-tree-3.1.jar"/>
			<pathelement location="lib/findbugs/jsr305.jar"/>
			<pathelement location="lib/findbugs/commons-lang-2.4.jar"/>
		</classpath>
	</taskdef>
	<taskdef name="checkstyle" classname="com.puppycrawl.tools.checkstyle.CheckStyleTask">
		<classpath>
			<pathelement location="lib/checkstyle/checkstyle-5.0.jar"/>
			<pathelement location="lib/checkstyle/commons-beanutils-core.jar"/>
			<pathelement location="lib/checkstyle/commons-cli-1.1.jar"/>
			<pathelement location="lib/checkstyle/commons-logging.jar"/>
			<pathelement location="lib/checkstyle/antlr.jar"/>
			<pathelement location="lib/checkstyle/google-collect-snapshot-20090211.jar"/>
		</classpath>
	</taskdef>
	<taskdef resource="tasks.properties">
		<classpath>
			<pathelement location="lib/testing/cobertura.jar"/>
			<pathelement location="lib/testing/asm-3.0.jar"/>
			<pathelement location="lib/testing/log4j-1.2.9.jar"/>
			<pathelement location="lib/testing/asm-tree-3.0.jar"/>
			<pathelement location="lib/testing/jakarta-oro-2.0.8.jar"/>
		</classpath>
	</taskdef>
	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask">
		<classpath>
			<pathelement location="lib/pmd/pmd-4.1.jar"/>
			<pathelement location="lib/pmd/jaxen-1.1.1.jar"/>
			<pathelement location="lib/pmd/asm-3.1.jar"/>
			<pathelement location="lib/pmd/junit-4.4.jar"/>
		</classpath>
	</taskdef>
	<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
		<classpath>
			<pathelement location="lib/jaxb/jaxb-xjc.jar"/>
		</classpath>
	</taskdef>

	<path id="classpath">
		<fileset dir="lib" includes="**/*.jar"/>
	</path>
    
	<target name="clean">
		<delete dir="build"/>
		<delete file="cobertura.ser"/>
	</target>
    
	<target name="javadoc">
		<mkdir dir="build/javadoc"/>
		<delete includeemptydirs="true">
			<fileset dir="build/javadoc" includes="**/*"/>
		</delete>
		<javadoc destdir="build/javadoc/" classpathref="classpath">
			<fileset dir="src/com/syncleus/dann" includes="**/*.java"/>
		</javadoc>
	</target>

	<target name="lint" description="Perform lint checks">
		<mkdir dir="build/lint"/>
		<lint4j packages="com.syncleus.*" level="5">
			<sourcepath>
				<dirset dir="src">
					<include name="**/*.java" />
				</dirset>
				<pathelement path="src/" />
			</sourcepath>
			<classpath>
				<fileset dir="lib/">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<formatters>
				<formatter type="text" />
				<formatter type="xml" toFile="build/lint/all.xml"/>
			</formatters>
		</lint4j>
	</target>

    <target  name="jaxb">
        <mkdir dir="build/src-jaxb"/>
        <xjc extension="true" destdir="build/src-jaxb">
            <arg line="-Xannotate"/>
            <schema dir="schema/jaxb" includes="*.xsd"/>
            <!-- this activates the JAXB2 plugins to add annotations to generated classes -->
			<classpath>
				<fileset dir="lib/jaxb/annotate">
					<!-- JAXB2 Basics library -->
					<include name="jaxb2-basics-*.jar"/>
					<include name="jaxb2-basics-annotate*.jar"/>
					<!-- JAXB2 Basics library dependencies -->
					<include name="annox-*.jar"/>
					<include name="hibernate-search-*.jar"/>
					<include name="commons-logging-*.jar"/>
					<include name="commons-lang-*.jar"/>
				</fileset>
			</classpath>
        </xjc>
    </target>

	<target name="compile" depends="jaxb">
		<delete dir="build/classes"/>

		<mkdir dir="build/classes"/>
		<javac destdir="build/classes" classpathref="classpath" debug="true" debuglevel="${debug.level}" excludes="com/syncleus/tests/**">
            <src path="src"/>
            <src path="build/src-jaxb"/>
        </javac>
		<copy file="log4j.properties" todir="build/classes/"/>


		<mkdir dir="build/tests/classes"/>
		<javac destdir="build/tests/classes" classpathref="classpath" debug="true" debuglevel="${debug.level}">
            <src path="src"/>
            <src path="build/src-jaxb"/>
			<include name="com/syncleus/tests/**"/>
		</javac>
		<delete dir="build/tests/classes/com/syncleus/dann"/>

		<mkdir dir="build/coverage/classes"/>
		<cobertura-instrument todir="build/coverage/classes">
			<fileset dir="build">
				<include name="classes/**/*.class"/>
				<include name="tests/classes/**/*.class"/>
			</fileset>
		</cobertura-instrument>
	</target>

	<target name="compile-warnings" depends="jaxb">
		<delete dir="build/classes"/>

		<mkdir dir="build/classes"/>
		<javac destdir="build/classes" classpathref="classpath" debug="true" debuglevel="${debug.level}" excludes="com/syncleus/tests/**">
            <src path="src"/>
            <src path="build/src-jaxb"/>
			<compilerarg value="-Xlint"/>
		</javac>

		<mkdir dir="build/tests/classes"/>
		<javac destdir="build/tests/classes" classpathref="classpath" debug="true" debuglevel="${debug.level}">
            <src path="src"/>
            <src path="build/src-jaxb"/>
			<include name="com/syncleus/tests/**"/>
			<compilerarg value="-Xlint"/>
		</javac>
		<delete dir="build/tests/classes/com/syncleus/dann"/>

		<mkdir dir="build/coverage/classes"/>
		<cobertura-instrument todir="build/coverage/classes">
			<fileset dir="build">
				<include name="classes/**/*.class"/>
				<include name="tests/classes/**/*.class"/>
			</fileset>
		</cobertura-instrument>
	</target>

	<target name="build">
		<mkdir dir="build/jar"/>
		<jar destfile="build/jar/dann.jar" basedir="build/classes">
			<manifest>
				<attribute name="Product-Name" value="dANN"/>
				<attribute name="Package-Title" value="com.syncleus.dann"/>
				<attribute name="Package-Version" value="2.0"/>
				<attribute name="Specification-Title" value="An Artificial Intelligence library."/>
				<attribute name="Specification-Vendor" value="Syncleus, Inc."/>
				<attribute name="Specification-Version" value="2.0"/>
				<attribute name="Implementation-Title" value="An Artificial Intelligence library."/>
				<attribute name="Implementation-Vendor" value="Syncleus, Inc."/>
				<attribute name="Implementation-Vendor-Id" value="com.syncleus.dann"/>
				<attribute name="Implementation-Version" value="2.0"/>
			</manifest>
		</jar>
		<jar destfile="build/jar/dann-tests.jar" basedir="build/tests/classes">
			<manifest>
				<attribute name="Product-Name" value="dANN"/>
				<attribute name="Package-Title" value="com.syncleus.dann"/>
				<attribute name="Package-Version" value="2.0"/>
				<attribute name="Specification-Title" value="An Artificial Intelligence library."/>
				<attribute name="Specification-Vendor" value="Syncleus, Inc."/>
				<attribute name="Specification-Version" value="2.0"/>
				<attribute name="Implementation-Title" value="An Artificial Intelligence library."/>
				<attribute name="Implementation-Vendor" value="Syncleus, Inc."/>
				<attribute name="Implementation-Vendor-Id" value="com.syncleus.dann"/>
				<attribute name="Implementation-Version" value="2.0"/>
			</manifest>
		</jar>
		<jar destfile="build/jar/dann-coverage.jar" basedir="build/coverage/classes">
			<manifest>
				<attribute name="Product-Name" value="dANN"/>
				<attribute name="Package-Title" value="com.syncleus.dann"/>
				<attribute name="Package-Version" value="2.0"/>
				<attribute name="Specification-Title" value="An Artificial Intelligence library."/>
				<attribute name="Specification-Vendor" value="Syncleus, Inc."/>
				<attribute name="Specification-Version" value="2.0"/>
				<attribute name="Implementation-Title" value="An Artificial Intelligence library."/>
				<attribute name="Implementation-Vendor" value="Syncleus, Inc."/>
				<attribute name="Implementation-Vendor-Id" value="com.syncleus.dann"/>
				<attribute name="Implementation-Version" value="2.0"/>
			</manifest>
		</jar>
	</target>
    
	<target name="tests-nocoverage">
		<mkdir dir="build/tests"/>
		<junit printsummary="yes" haltonfailure="no" showoutput="yes" >
			<classpath>
				<pathelement location="build/jar/dann.jar"/>
				<pathelement location="build/jar/dann-tests.jar"/>
				<pathelement location="lib/testing/junit-4.6.jar"/>
				<pathelement location="lib/log4j-1.2.15.jar"/>
			</classpath>
			<formatter type="xml"/>
			<batchtest fork="yes" todir="build/tests">
				<fileset dir="src">
					<include name="com/syncleus/tests/**/Test*.java"/>
					<exclude name="**/AllTests.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="tests-coverage">
		<mkdir dir="build/coverage/tests"/>
		<junit printsummary="yes" haltonfailure="no" showoutput="yes" >
			<classpath>
				<pathelement location="build/jar/dann-coverage.jar"/>
                <pathelement location="build/jar/dann.jar"/>
                <pathelement location="build/jar/dann-tests.jar"/>
				<pathelement location="lib/testing/junit-4.6.jar"/>
				<pathelement location="lib/testing/cobertura.jar"/>
				<pathelement location="lib/log4j-1.2.15.jar"/>
			</classpath>
			<formatter type="xml"/>
			<batchtest fork="yes" todir="build/coverage/tests">
				<fileset dir="src">
					<include name="com/syncleus/tests/**/Test*.java"/>
					<exclude name="**/AllTests.java"/>
				</fileset>
			</batchtest>
		</junit>

        <mkdir dir="build/coverage/reports"/>
        <cobertura-report format="xml" srcdir="src/" destdir="build/coverage/reports"/>

		<move file="./cobertura.ser" tofile="build/coverage/cobertura.ser"/>
	</target>
	
	<target name="findbugs">
		<mkdir dir="build/findbugs"/>
		<findbugs home="lib/findbugs/"
				  output="xml"
				  outputFile="build/findbugs/findbugs-report.xml" >
			<auxClasspath path="lib/j3dcore.jar"/>
			<auxClasspath path="lib/freehep-j3d.jar"/>
			<auxClasspath path="lib/j3dutils.jar"/>
			<auxClasspath path="lib/vecmath.jar"/>
			<auxClasspath path="lib/log4j-1.2.15.jar"/>
			<sourcePath path="src/" />
			<class location="build/jar/dann.jar" />
		</findbugs>
	</target>


	<target name="checkstyle">
		<mkdir dir="build/checkstyle"/>
		<checkstyle config="checks.xml" maxErrors="2147483647">
			<fileset dir="src" includes="**/*.java"/>
			<formatter type="plain"/>
			<formatter type="xml" toFile="build/checkstyle/checkstyle-report.xml"/>
		</checkstyle>
	</target>

	<target name="pmd">
		<mkdir dir="build/pmd"/>
		<pmd rulesetfiles="pmd.xml">
			<formatter type="xml" toFile="build/pmd/pmd-report.xml"/>
			<fileset dir="src/">
				<include name="**/*.java"/>
			</fileset>
		</pmd>
	</target>

    <target name="profile">
        <nbprofiledirect>
            <classpath>
				<pathelement location="build/jar/dann.jar"/>
				<pathelement location="build/jar/dann-tests.jar"/>
				<pathelement location="lib/testing/junit-4.6.jar"/>
				<pathelement location="lib/log4j-1.2.15.jar"/>
				<pathelement location="lib/j3dcore.jar"/>
				<pathelement location="lib/freehep-j3d.jar"/>
				<pathelement location="lib/j3dutils.jar"/>
				<pathelement location="lib/vecmath.jar"/>
                <!--path location="../java_dann_examples/build/jar/dann_examples.jar"/-->
            </classpath>
        </nbprofiledirect>
        <java fork="true" classname="com.syncleus.tests.dann.InteractiveTests">
            <jvmarg value="${profiler.info.jvmargs.agent}"/>
            <classpath>
				<pathelement location="build/jar/dann.jar"/>
				<pathelement location="build/jar/dann-tests.jar"/>
				<pathelement location="lib/testing/junit-4.6.jar"/>
				<pathelement location="lib/log4j-1.2.15.jar"/>
				<pathelement location="lib/j3dcore.jar"/>
				<pathelement location="lib/freehep-j3d.jar"/>
				<pathelement location="lib/j3dutils.jar"/>
				<pathelement location="lib/vecmath.jar"/>
            </classpath>
        </java>
    </target>


	<target name="test-interactive">
        <java fork="true" classname="com.syncleus.tests.dann.InteractiveTests">
            <classpath>
                <fileset dir="lib" includes="**/*.jar"/>
                <path location="build/jar/dann.jar"/>
				<path location="build/jar/dann-tests.jar"/>
            </classpath>
        </java>
	</target>



	<target name="build-all">
		<antcall target="clean"/>
		<antcall target="compile"/>
		<antcall target="build"/>
	</target>

	<target name="test-all">
		<antcall target="clean"/>
		<antcall target="compile"/>
		<antcall target="build"/>
		<antcall target="tests-nocoverage"/>
	</target>

	<target name="all">
		<antcall target="clean"/>
		<antcall target="javadoc"/>
		<antcall target="lint"/>
		<antcall target="compile"/>
		<antcall target="build"/>
		<antcall target="tests-nocoverage"/>
		<antcall target="tests-coverage"/>
	</target>
</project>
